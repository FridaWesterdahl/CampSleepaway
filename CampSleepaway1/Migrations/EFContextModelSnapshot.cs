// <auto-generated />
using System;
using CampSleepaway1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampSleepaway1.Migrations
{
    [DbContext(typeof(EFContext))]
    partial class EFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CampSleepaway1.Models.Cabin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CabinId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CapacityCampers")
                        .HasColumnType("int");

                    b.Property<int>("CapacityCounselor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CabinName");

                    b.HasKey("Id");

                    b.ToTable("Cabins");
                });

            modelBuilder.Entity("CampSleepaway1.Models.Camper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CamperId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("Age");

                    b.Property<int?>("CamperId")
                        .HasColumnType("int")
                        .HasColumnName("CamperId1");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.HasKey("Id");

                    b.HasIndex("CamperId");

                    b.ToTable("Campers");
                });

            modelBuilder.Entity("CampSleepaway1.Models.CamperStay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CamperStayId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalDates")
                        .HasColumnType("datetime2")
                        .HasColumnName("ArrivalDate");

                    b.Property<int?>("CamperStayId")
                        .HasColumnType("int")
                        .HasColumnName("CamperStayId1");

                    b.Property<DateTime>("DepartureDates")
                        .HasColumnType("datetime2")
                        .HasColumnName("DepartureDate");

                    b.HasKey("Id");

                    b.HasIndex("CamperStayId");

                    b.ToTable("CamperStays");
                });

            modelBuilder.Entity("CampSleepaway1.Models.Counselor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CounselorId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CounselorId")
                        .HasColumnType("int")
                        .HasColumnName("CounselorId1");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CounselorId");

                    b.ToTable("Counselors");
                });

            modelBuilder.Entity("CampSleepaway1.Models.CounselorStay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CounselorStayId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalDates")
                        .HasColumnType("datetime2")
                        .HasColumnName("ArrivalDate");

                    b.Property<int?>("CounselorStayId")
                        .HasColumnType("int")
                        .HasColumnName("CounselorStayId1");

                    b.Property<DateTime>("DepartureDates")
                        .HasColumnType("datetime2")
                        .HasColumnName("DepartureDate");

                    b.HasKey("Id");

                    b.HasIndex("CounselorStayId");

                    b.ToTable("CounselorStays");
                });

            modelBuilder.Entity("CampSleepaway1.Models.NextOfKin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NextOfKinId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LastName");

                    b.Property<int?>("NextOfKinId")
                        .HasColumnType("int")
                        .HasColumnName("NextOfKinId1");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("NextOfKinId");

                    b.ToTable("NextOfKins");
                });

            modelBuilder.Entity("CampSleepaway1.Models.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ArrivalDates")
                        .HasColumnType("datetime2")
                        .HasColumnName("ArrivalDate");

                    b.Property<DateTime>("DepartureDates")
                        .HasColumnType("datetime2")
                        .HasColumnName("DepartureDate");

                    b.Property<DateTimeOffset>("EarliestVisit")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("LatestVisit")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaxVisitTime")
                        .HasColumnType("int");

                    b.Property<int?>("VisitId")
                        .HasColumnType("int")
                        .HasColumnName("VisitId1");

                    b.HasKey("Id");

                    b.HasIndex("VisitId");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("CampSleepaway1.Models.Camper", b =>
                {
                    b.HasOne("CampSleepaway1.Models.CamperStay", null)
                        .WithMany("Campers")
                        .HasForeignKey("CamperId");

                    b.HasOne("CampSleepaway1.Models.NextOfKin", null)
                        .WithMany("Campers")
                        .HasForeignKey("CamperId");
                });

            modelBuilder.Entity("CampSleepaway1.Models.CamperStay", b =>
                {
                    b.HasOne("CampSleepaway1.Models.Cabin", null)
                        .WithMany("CamperStays")
                        .HasForeignKey("CamperStayId");
                });

            modelBuilder.Entity("CampSleepaway1.Models.Counselor", b =>
                {
                    b.HasOne("CampSleepaway1.Models.CounselorStay", null)
                        .WithMany("Counselors")
                        .HasForeignKey("CounselorId");
                });

            modelBuilder.Entity("CampSleepaway1.Models.CounselorStay", b =>
                {
                    b.HasOne("CampSleepaway1.Models.Cabin", null)
                        .WithMany("CounselorStays")
                        .HasForeignKey("CounselorStayId");
                });

            modelBuilder.Entity("CampSleepaway1.Models.NextOfKin", b =>
                {
                    b.HasOne("CampSleepaway1.Models.Visit", null)
                        .WithMany("NextOfKins")
                        .HasForeignKey("NextOfKinId");
                });

            modelBuilder.Entity("CampSleepaway1.Models.Visit", b =>
                {
                    b.HasOne("CampSleepaway1.Models.Camper", null)
                        .WithMany("Visits")
                        .HasForeignKey("VisitId");
                });

            modelBuilder.Entity("CampSleepaway1.Models.Cabin", b =>
                {
                    b.Navigation("CamperStays");

                    b.Navigation("CounselorStays");
                });

            modelBuilder.Entity("CampSleepaway1.Models.Camper", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("CampSleepaway1.Models.CamperStay", b =>
                {
                    b.Navigation("Campers");
                });

            modelBuilder.Entity("CampSleepaway1.Models.CounselorStay", b =>
                {
                    b.Navigation("Counselors");
                });

            modelBuilder.Entity("CampSleepaway1.Models.NextOfKin", b =>
                {
                    b.Navigation("Campers");
                });

            modelBuilder.Entity("CampSleepaway1.Models.Visit", b =>
                {
                    b.Navigation("NextOfKins");
                });
#pragma warning restore 612, 618
        }
    }
}
